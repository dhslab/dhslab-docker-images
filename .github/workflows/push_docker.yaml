name: Push Container to ghcr.io

on:
  push:
    paths:
      - '**/Dockerfile'

jobs:
  # This job identifies changed Dockerfiles and creates a build matrix.
  get-container-names:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed by tj-actions/changed-files to compare commits

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44 # Use a more recent version

      - name: Create build matrix for changed containers
        id: set-matrix
        run: |
          # The 'paths' trigger ensures all files are Dockerfiles.
          # We get the directory name of each Dockerfile path.
          # For a path like 'services/api/Dockerfile', this becomes 'services/api'.
          # This assumes the directory path is the desired container name context.
          paths=$(for file in ${{ steps.changed-files.outputs.all_changed_files }}; do echo "\"$(dirname "$file")\""; done | sort -u | tr '\n' ',' | sed 's/,$//')
          
          # We construct a valid JSON object for the strategy matrix.
          # e.g., {"include":[{"path":"services/api"},{"path":"services/web"}]}
          echo "matrix={\"include\":[$(echo $paths | sed 's/"\([^"]*\)"/{"path":"\1"}/g')]}" >> $GITHUB_OUTPUT
  
  # This job builds and pushes the container images based on the matrix.
  push-docker-image:
    needs: get-container-names
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GitHub Container Registry
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-container-names.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.path }}
          tags: |
            # Tag with 'latest'
            type=raw,value=latest,enable=true
            # Tag with date format YYMMDD
            type=raw,value={{date 'YYMMDD'}},enable=true

      - name: ðŸš€ Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
